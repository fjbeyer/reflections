How did viewing a diff between two versions of a file help you see the bug that was introduced?

By showing only the lines that differ between the two versions it was easier to find the typo.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Makes it easier to find the time a bug was introduced.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Con: My computer may crash meaning I loose all changes I made. Or I may forget to commit (though in this case I still have my local versions of files, provided I saved them).
Pro: I can make commits whenever I finish a task. This creates meaningfull log entries.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

A change of multiple files may be a logical entity. In Git you use one repository per project. Google Docs doesnt know about projects so it treats every file as a project of its own. 

How might using version control make you more confident to make changes that could break something?

Because I can always find the last working version.

Now that you have your workspace set up, what do you want to try using Git for?

For now just this course.
